(defwindow bar
          :monitor 0
          :geometry (geometry :x "0%"
                              :y "0%"
                              :width "100%"
                              :height "25px"
                              :anchor "top center")
          :stacking "fg"
          :exclusive "true"
        (todo))


; [ { id: "", mon: "", focused: bool} ]
(deflisten workspaces :initial "[]"
  'scripts/workspaces')

(defpoll time :interval "60s"
  'date +"%a %d. %R"')
  ;'date +"%a %d. %I:%M %p"')

(defvar layout "master")


(defwidget todo []
  (centerbox
    :orientation "h"
    :class "todo"
    :valign "center"
    (left)
    (middle)
    (right)
    ))


(defwidget left []
  (box :class "left"
       :spacing 8
       :space-evenly false
    (logo)
    (workspaces)))


(defwidget middle []
  (box :class "middle"
    ""))


(defwidget right []
  (box :class "right"
       :halign "end"
       :spacing 8
       :space-evenly false
    (time)
    (layout)
    ))


(defwidget logo []
  (image :path "images/snowflake.png"
         :image-width 22))


(defwidget workspaces []
  (box :halign "start"
       :class "workspaces-area"
       :spacing 0
    (for w in workspaces
         (button :onclick "hyprctl dispatch workspace ${w.id}"
                 :class {w.focused ? "workspace focused" : "workspace"}
                 {w.id}))
    ))


(defwidget time []
    (label 
      :halign "end"
      :text time))

(defwidget layout []
  (button
      :class "layout"
      :onclick {layout == "master"
                  ? 'hyprctl keyword general:layout "dwindle"; eww update layout="dwindle"'
                  : 'hyprctl keyword general:layout "master"; eww update layout="master"'}
      :style "background-image: url('images/${layout}')"
    ))

(defwidget layout []
  (button
      :class "layout"
      :onclick {layout == "master"
                  ? 'hyprctl keyword general:layout "dwindle"; eww update layout="dwindle"'
                  : 'hyprctl keyword general:layout "master"; eww update layout="master"'}
    (image :class "layout-icon"
           :path "images/${layout}-layout.png"
           :image-width 22)))
